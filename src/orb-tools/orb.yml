version: 2.1

orbs:
  cli: circleci/circleci-cli@volatile

commands:
  validate:
    description: >
      Users the CLI to validate a given orb yml
    parameters:
      orb-path:
        description: "Path to the orb to be validated."
        type: string
    steps:
      - run:
          name: "Validate whether this is a well-formed orb."
          command: circleci orb validate << parameters.orb-path >>

  pack:
    description: >
      *Experimental*
      Uses the CLI to pack an orb file structure
      into a single orb yml.
    parameters:
      source:
        description: "Path to the root folder of an unpacked orb."
        type: string
      destination:
        description: "Path including the filename to output the packed orb."
        type: string
    steps:
      - run:
          name: "Pack << parameters.source>>"
          command: |
            circleci config pack << parameters.source >> > << parameters.destination >>

# store-as-artifact:
#   description: >
#     Stores an orb as a circleci artifact.
#   parameters:
#     a:
#       description:
#       type:
#   steps:
#     - run:
#         name: ""
#         command: echo 1

# persist-to-workspace:
#   description: >
#     Persists an orb yml between jobs in a workflow.
#   parameters:
#     a:
#       description:
#       type:
#   steps:
#     - run:
#         name: ""
#         command: echo 1

  publish:
    description: >
      Uses the CLI to publish an orb to the registry.
    parameters:
      orb-path:
        description: "Path to an orb."
        type: string
      orb-ref:
        description: >
          A fully-qualified reference to an orb. This takes the form namespace/orb@version.
          NOTE: To publish a dev version prefix the version with 'dev:' like so namespace/orb@dev:label
        type: string
      token-variable:
        description: "The env var containing your token. Pass this as a literal string such as `$ORB_PUBLISHING_TOKEN`. Do not paste the actual token into your configuration."
        type: string
    steps:
      - run:
          name: >
            Publish orb at << parameters.orb-path >> to << parameters.orb-ref >>
            NOTE: this currently assumes you are publishing to the registry at circleci.com
          command: |
            circleci orb publish << parameters.orb-path >> << parameters.orb-ref >> --token << parameters.token-variable >>
jobs:
  pack-and-validate-orb:
    description: >
      Pack the contents of an orb for publishing
      and validate the orb is well-formed.
    parameters:
      path:
        description: >
          The root of where the code for the orb lives
          relative to the root of the repo.
        type: string
      workspace-path:
        description: >
          When provided, save the contents of the orb into
          the workspace at the given path. The value should
          include a trailing slash.
          Empty string (also the default value) is a no-op.
        type: string
        default: ""
      artifact-path:
        description: >
          When provided, save the contents of the orb as an
          artifact in the directory specified. The value should
          include a trailing slash.
          Empty string (also the default value) is a no-op.
        type: string
        default: ""
      destination-file-name:
        description: >
          The name of the file where the packed string will be stored.
          In most cases you can leave the default value of `orb.yml`.
        type: string
        default: "orb.yml"

    executor: cli/default
    steps:
      - run:
          name: "Starting the job: pack-and-validate-orb on the directory << parameters.path >>"
          command: |
            echo "parameters.workspace-path passed as: '<< parameters.workspace-path >>' (if the string is empty no workspace save will be attempted)"
            echo "parameters.artifact-path passed as: '<< parameters.artifact-path >>' (if the string is empty no artifact save will be attempted)"
            echo "parameters.destination-file-name passed as: '~/pack-and-validate-orb/<< parameters.destination-file-name >>'"
      - checkout
      - run:
          name: "Ensure /pack-and-validate-orb"
           # TODO: this is more fragile than is ideal
           # TODO: using this fixed path feels like a hack or a missing feature to have a small dose of shared state across the job that can be mutated at runtime
          command: |
            mkdir -pv ~/pack-and-validate-orb
      - pack:
          source: << parameters.path >>
          destination: ~/pack-and-validate-orb/<< parameters.destination-file-name >>
      - validate:
          orb-path: ~/pack-and-validate-orb/<< parameters.destination-file-name >>
      - when:
          condition: << parameters.workspace-path >>
          steps:
            - run:
                name: Save the packed orb to `<< parameters.workspace-path >>`
                command: |
                  mkdir -p << parameters.workspace-path >>
                  cp ~/pack-and-validate-orb/<< parameters.destination-file-name >> << parameters.workspace-path >>
            - persist_to_workspace:
                name: "putting the packed orb into `<< parameters.workspace-path >>` because that value was passed as `parameters.workspace-path`."
                root: .
                paths:
                  - << parameters.workspace-path >>
      - when:
          condition: << parameters.artifact-path >>
          steps:
            - store_artifacts:
                name: "Storing the artifact to << parameters.artifact-path >><< parameters.destination-file-name >>"
                path: ~/pack-and-validate-orb/<< parameters.destination-file-name >>
                destination: << parameters.artifact-path >><< parameters.destination-file-name >>

  publish-dev-orb:
    executor: cli/default
    parameters:
      namespace:
        description: "The namespace where this should be published."
        type: string
      orb:
        description: "The orb name where this should be published."
        type: string
      label:
        description: "The label to use when publishing the dev orb (eg: if you pass `foo` you will publish to `dev:foo`)"
        type: string
      workspace-path:
        description: "The directory relative to the workspace root where the orb file will be found. Should end in a trailing /"
        type: string
        default: ""
      token-variable:
        description: "The env var containing your token. Pass this as a literal string such as `$ORB_DEV_PUBLISHING_TOKEN`. Do not paste the actual token into your configuration."
        type: string
      file-name:
        description: "The name of the file where the packed string is stored. In most cases you can leave the default value."
        type: string
        default: "orb.yml"
      do-validation:
        description: "Boolean for whether to do validation. Default is true."
        type: boolean
        default: true
    steps:
      - when:
          condition: << parameters.workspace-path >>
          steps:
            - attach_workspace:
                at: .
      - unless:
          condition: << parameters.workspace-path >>
          steps:
            - run:
                name: "No workspace was passed."
                command: |
                  echo "No workspace was passed."
                  exit 1
      - when:
          condition: << parameters.do-validation >>
          steps:
            - run:
                name: "Validate whether this is a well-formed orb. Looking in << parameters.workspace-path >><< parameters.file-name >> for the file."
                command: circleci orb validate << parameters.workspace-path >><< parameters.file-name >>
      - publish:
          orb-path: << parameters.workspace-path >><< parameters.file-name >>
          # TODO: Just pass the orb-ref in as a parameter instead of building it here.
          orb-ref: << parameters.namespace >>/<< parameters.orb >>@dev:<< parameters.label >>
          token-variable: << parameters.token-variable >>
